stages:
  - test
  - build_docker_image
  - deploy

.build:
  stage: build_docker_image
  image: docker
  services:
    - docker:dind
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker build -t ${CONTAINER_IMAGE} --no-cache -f docker/${DOCKERFILE} .
  - docker push ${CONTAINER_IMAGE}
  - docker rmi ${CONTAINER_IMAGE}
  - docker logout $CI_REGISTRY

.deploy-wp:
  stage: deploy
  image: dockerhub.ebi.ac.uk/kamal/deploy-tools:0.1

  script:
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - git -C ensembl-client-caas-deploy/ checkout migration/wp-hx
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_genome_search_service.yaml
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml

.deploy-ehk:
  stage: deploy
  image: dockerhub.ebi.ac.uk/kamal/deploy-tools:0.1
  before_script:
  - export KUBECONFIG=/etc/deploy/config
  - mkdir -p /etc/deploy
  - echo ${EMBASSY_KUBECONFIG} | base64 -d > ${KUBECONFIG}

  script:
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_IMAGE}#g" ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml
  - sed -i "s#<DEPLOYMENT_ENV>#${DEPLOYENV}#g" ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml
  - sed -i "s#<DEPLOYMENT_ENV>#${DEPLOYENV}#g" ensembl-client-caas-deploy/ensembl_genome_search_service.yaml
  - kubectl config use-context $KUBE_CONTEXT
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_genome_search_service.yaml
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml

variables:
  CONTAINER_IMAGE: $GITLAB_REGISTRY_URL/$GITLAB_REGISTRY_NAMESPACE/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}
  CONTAINER_INTERNAL_IMAGE: $GITLAB_REGISTRY_URL/$GITLAB_REGISTRY_NAMESPACE/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}-internal
  DOCKERFILE: Dockerfile.prod
  DOCKER_TLS_CERTDIR: ""

# Run Tests
Test:feature:
  stage: test

  image: python:3.7.2

  script:
    - pip3 install --no-cache-dir -r requirements.txt
    - python dump_species.py --fetch_by_genome Homo_sapiens Triticum_aestivum Caenorhabditis_elegans Escherichia_coli_str_k_12_substr_mg1655 Saccharomyces_cerevisiae Plasmodium_falciparum
    - echo 'y' | python dump_species.py --create_from_file configs/grch37.json
    - echo 'y' | python index_species.py
    - python -m unittest discover -s tests

# Build Prod/Stage
Docker-IMG:
  extends: .build

  only:
  - dev
  - master

# Build internal
Docker-IMG:internal:
  extends: .build
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}-internal
    DOCKERFILE: Dockerfile.internal

  only:
  - master

# Build Prod/Stage
Docker-IMG:feature:
  extends: .build
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
    DOCKERFILE: Dockerfile.feature

  only:
  - /^feature\/.*$/

  when: manual

# Deploy staging to EHK-HH cluster
Staging:EHK-HH:
  extends: .deploy-ehk
  variables:
    DEPLOYENV: staging
    KUBE_CONTEXT: ens-stage-ctx
  only:
  - dev

# Deploy staging to WP-HX cluster
Staging:WP-HX:
  extends: .deploy-wp
  environment:
    name : wp-hx-staging

  only:
  - dev

# Deploy staging to WP-HH cluster
Staging:WP-HH:
  extends: .deploy-wp
  environment:
    name : wp-hh-staging

  only:
  - dev

# Deploy Live to EHK-HH cluster
Live:EHK-HH:
  extends: .deploy-ehk
  variables:
    DEPLOYENV: prod
    KUBE_CONTEXT: ens-prod-ctx

  only:
  - master

  when: manual

# Deploy internal
Internal:EHK-HH:
  stage: deploy
  image: dockerhub.ebi.ac.uk/kamal/deploy-tools:0.1

  before_script:
  - export KUBECONFIG=/etc/deploy/config
  - mkdir -p /etc/deploy
  - echo ${EMBASSY_KUBECONFIG} | base64 -d > ${KUBECONFIG}

  script:
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - cd ensembl-client-caas-deploy
  - git checkout refactor-manifest
  - cd ..
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}-internal/g" ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml
  - sed -i "s/<DEPLOYMENT_ENV>/internal/g" ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml
  - kubectl config view
  - kubectl config use-context ens-dev-ctx
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml

  only:
  - master

  when: manual

# Deploy Feature
Feature:EHK-HH:
  stage: deploy
  image: dockerhub.ebi.ac.uk/kamal/deploy-tools:0.1

  before_script:
  - export KUBECONFIG=/etc/deploy/config
  - mkdir -p /etc/deploy
  - echo ${EMBASSY_KUBECONFIG} | base64 -d > ${KUBECONFIG}

  script:
  - feature_branch=${CI_COMMIT_REF_NAME}
  - feature_tag=${feature_branch#"feature/"}
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - cd ensembl-client-caas-deploy
  - git checkout refactor-manifest
  - cd ..
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}-$feature_tag/g" ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml
  - sed -i "s/<DEPLOYMENT_ENV>/$feature_tag/g" ensembl-client-caas-deploy/ensembl_genome_search_cm.yaml
  - sed -i "s/<DEPLOYMENT_ENV>/$feature_tag/g" ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml
  - kubectl config use-context ens-dev-ctx
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_genome_search_cm.yaml
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_genome_search_deployment.yaml

  only:
  - /^feature\/.*$/

  when: manual